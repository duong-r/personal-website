{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/ryanduong/Documents/Projects/personal-website-main/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _toConsumableArray from\"/Users/ryanduong/Documents/Projects/personal-website-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/ryanduong/Documents/Projects/personal-website-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ryanduong/Documents/Projects/personal-website-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/ryanduong/Documents/Projects/personal-website-main/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,useCallback}from\"react\";import Container from\"react-bootstrap/Container\";import Jumbotron from\"react-bootstrap/Jumbotron\";import Row from\"react-bootstrap/Row\";import ProjectCard from\"./ProjectCard\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var dummyProject={name:null,description:null,svn_url:null,stargazers_count:null,languages_url:null,pushed_at:null};var API=\"https://api.github.com\";// const gitHubQuery = \"/repos?sort=updated&direction=desc\";\n// const specificQuery = \"https://api.github.com/repos/hashirshoaeb/\";\nvar Project=function Project(_ref){var heading=_ref.heading,username=_ref.username,length=_ref.length,specific=_ref.specific;var allReposAPI=\"\".concat(API,\"/users/\").concat(username,\"/repos?sort=updated&direction=desc\");var specificReposAPI=\"\".concat(API,\"/repos/\").concat(username);var dummyProjectsArr=new Array(length+specific.length).fill(dummyProject);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),projectsArray=_useState2[0],setProjectsArray=_useState2[1];var fetchRepos=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var repoList,response,_iterator,_step,repoName,_response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:repoList=[];_context.prev=1;_context.next=4;return axios.get(allReposAPI);case 4:response=_context.sent;// slicing to the length\nrepoList=_toConsumableArray(response.data.slice(0,length));// adding specified repos\n_context.prev=6;_iterator=_createForOfIteratorHelper(specific);_context.prev=8;_iterator.s();case 10:if((_step=_iterator.n()).done){_context.next=18;break;}repoName=_step.value;_context.next=14;return axios.get(\"\".concat(specificReposAPI,\"/\").concat(repoName));case 14:_response=_context.sent;repoList.push(_response.data);case 16:_context.next=10;break;case 18:_context.next=23;break;case 20:_context.prev=20;_context.t0=_context[\"catch\"](8);_iterator.e(_context.t0);case 23:_context.prev=23;_iterator.f();return _context.finish(23);case 26:_context.next=31;break;case 28:_context.prev=28;_context.t1=_context[\"catch\"](6);console.error(_context.t1.message);case 31:// setting projectArray\n// TODO: remove the duplication.\nsetProjectsArray(repoList);_context.next=37;break;case 34:_context.prev=34;_context.t2=_context[\"catch\"](1);console.error(_context.t2.message);case 37:case\"end\":return _context.stop();}}},_callee,null,[[1,34],[6,28],[8,20,23,26]]);})),[allReposAPI,length,specific,specificReposAPI]);useEffect(function(){fetchRepos();},[fetchRepos]);return/*#__PURE__*/_jsx(Jumbotron,{fluid:true,id:\"projects\",className:\"bg-light m-0\",children:/*#__PURE__*/_jsxs(Container,{className:\"\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"display-4 pb-5 text-center\",children:heading}),/*#__PURE__*/_jsx(Row,{children:projectsArray.length?projectsArray.map(function(project,index){return/*#__PURE__*/_jsx(ProjectCard,{id:\"project-card-\".concat(index),value:project},\"project-card-\".concat(index));}):dummyProjectsArr.map(function(project,index){return/*#__PURE__*/_jsx(ProjectCard,{id:\"dummy-\".concat(index),value:project},\"dummy-\".concat(index));})})]})});};export default Project;","map":{"version":3,"sources":["/Users/ryanduong/Documents/Projects/personal-website-main/src/components/home/Project.jsx"],"names":["React","useState","useEffect","useCallback","Container","Jumbotron","Row","ProjectCard","axios","dummyProject","name","description","svn_url","stargazers_count","languages_url","pushed_at","API","Project","heading","username","length","specific","allReposAPI","specificReposAPI","dummyProjectsArr","Array","fill","projectsArray","setProjectsArray","fetchRepos","repoList","get","response","data","slice","repoName","push","console","error","message","map","project","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport axios from \"axios\";\n\nconst dummyProject = {\n  name: null,\n  description: null,\n  svn_url: null,\n  stargazers_count: null,\n  languages_url: null,\n  pushed_at: null,\n};\nconst API = \"https://api.github.com\";\n// const gitHubQuery = \"/repos?sort=updated&direction=desc\";\n// const specificQuery = \"https://api.github.com/repos/hashirshoaeb/\";\n\nconst Project = ({ heading, username, length, specific }) => {\n  const allReposAPI = `${API}/users/${username}/repos?sort=updated&direction=desc`;\n  const specificReposAPI = `${API}/repos/${username}`;\n  const dummyProjectsArr = new Array(length + specific.length).fill(\n    dummyProject\n  );\n\n  const [projectsArray, setProjectsArray] = useState([]);\n\n  const fetchRepos = useCallback(async () => {\n    let repoList = [];\n    try {\n      // getting all repos\n      const response = await axios.get(allReposAPI);\n      // slicing to the length\n      repoList = [...response.data.slice(0, length)];\n      // adding specified repos\n      try {\n        for (let repoName of specific) {\n          const response = await axios.get(`${specificReposAPI}/${repoName}`);\n          repoList.push(response.data);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n      // setting projectArray\n      // TODO: remove the duplication.\n      setProjectsArray(repoList);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [allReposAPI, length, specific, specificReposAPI]);\n\n  useEffect(() => {\n    fetchRepos();\n  }, [fetchRepos]);\n\n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\n      <Container className=\"\">\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\n        <Row>\n          {projectsArray.length\n            ? projectsArray.map((project, index) => (\n                <ProjectCard\n                  key={`project-card-${index}`}\n                  id={`project-card-${index}`}\n                  value={project}\n                />\n              ))\n            : dummyProjectsArr.map((project, index) => (\n                <ProjectCard\n                  key={`dummy-${index}`}\n                  id={`dummy-${index}`}\n                  value={project}\n                />\n              ))}\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}